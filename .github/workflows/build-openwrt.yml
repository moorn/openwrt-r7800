#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  FREE_UP_DISK: true
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest

    steps:
    - name: 校验本地文件
      uses: actions/checkout@master

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/*
        sudo -E apt-get -qq update
        sudo apt-get -y install asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache flex g++ gawk gcc gcc-multilib gettext git git-core help2man htop lib32gcc1 libc6-dev-i386 libglib2.0-dev libncurses5-dev libssl-dev libtool libz-dev libelf-dev make msmtp ncurses-term ocaml-nox p7zip p7zip-full patch qemu-utils sharutils subversion texinfo uglifyjs unzip upx xmlto yui-compressor zlib1g-dev make cmake device-tree-compiler  g++-multilib  python3.5
    - name: 释放磁盘空间
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    - name: 克隆源代码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 更新源
      working-directory: ./openwrt
      run:  |
        ./scripts/feeds update -a

    - name: 安装源
      working-directory: ./openwrt
      run:  ./scripts/feeds install -a

    - name: 创建自定义配置文件 - OpenWrt-R7800
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH		
    - name: 开启SSH远程连接
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: 下载软件包
      working-directory: ./openwrt
      id: package
      run: |
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: 编译固件
      working-directory: ./openwrt
      id: compile
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
    - name: 上传BIN目录
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt-Bin-Lean(IPK插件集)
        path: openwrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/.config  ./artifact/.config
          find openwrt/bin/targets/ -name "*squashfs*img*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*squashfs*bin*" | xargs -i mv -f {} ./artifact/
    - name: 上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-Firmware-R7800-Lean
        path: ./artifact/
  
